{% extends '::container.html.twig' %}
{% block title "Account Options" %}

{% block stylesheets %}
    <!-- used to fix temporarily icons-textfields alignment bug in bootstrap 2.2.0 -->
    <style type="text/css">
	    .input-prepend
	    {
		    width: 100%;
	    }

	    .option-form-input
	    {
		    width: 80%;
		    width: -moz-calc(100% - 50px);
		    width: -webkit-calc(100% - 50px);
		    width: calc(100% - 50px);
	    }

        .input-prepend .add-on, .input-prepend .btn {
            margin-right: -4px;
            /*	margin-bottom: 9px;*/
        }

        .input-append, .input-prepend {
            font-size: 12px;
            white-space: normal;
        }
    </style>
{% endblock %}

{% block javascripts %}
    <script src={{ asset("validation/passvalidation.js") }} type="text/javascript"></script>
    <script type="text/javascript" charset="utf-8">

    function newPassValidation() {

		var group			= $(".passwords").removeClass().addClass("control-group passwords");
		var iconNew			= $(".iconPassNew").removeClass().addClass("iconPassNew");
		var iconConfirm		= $(".iconPassConfirm").removeClass().addClass("iconPassConfirm");
		var valueNew		= $("#options_plainPassword_new").val();
		var valueConfirm	= $("#options_plainPassword_confirm").val();
		var info			= $("#options_plainPassword_confirm").siblings('span.help-block').html('');
			
		var s = passvalid("options_plainPassword_new");

		if (s == "valid") //New Password is valid
		{
			//set New to success/OK
			iconNew.addClass("icon-ok");
			if (valueNew == valueConfirm) //New and Confirm match
			{
				//set Confirm to success/OK
				group.addClass("success");
				iconConfirm.addClass("icon-ok");
			}
			else //Confirm and New(which is valid) do not match, set Confirm to error
			{
				if (valueConfirm.length >= 0)
				{
					group.addClass("error");
					iconConfirm.addClass("icon-remove");
					info.html('<i>Sorry, Passwords do not match!</i>');
				}
			}
		}
		else if (s == "empty") //New Password is empty
		{
			if (valueNew == valueConfirm) //both New and Confirm empty
			{
				//bring Group,New,Confirm to normal
				group.removeClass("error success");
				iconNew.addClass("icon-exclamation-sign");
				iconConfirm.addClass("icon-exclamation-sign");
			}
			else    //Confirm not empty and different than New
			{
				//set Group,New,Confirm to error
				group.addClass("error");
				iconNew.addClass("icon-remove");
				iconConfirm.addClass("icon-remove");
				info.html('<i>Sorry, Passwords do not match!</i>');
			}
		}
		else //New Password out of limits or not complex enough
		{
			//set password group to error
			group.addClass("error");
			iconNew.addClass("icon-remove");
			iconConfirm.addClass("icon-remove");
			if (s == "outOfLimits")
				info.html('<i>Sorry, your Password needs to be at least 6 characters long</i>');
			else
				info.html('<i>Sorry, your New Password is <b>too simple</b>, try mix and matching Letters, Numbers or Symbols, to make it more secure.</i>');
		}
	}
		
	function currentPassValidation(el)
	{
		resetElements(el);
			
		if(window.passPost){window.passPost.abort();} // abort previous post request if present
		var value = $(el).val();
		var len = value.length;
		
		if (len != 0) {
			if (len > 5 && len < 255){ //reduce validation overhead
				if (isvalidpass(el.id))
				{
					group.addClass("warning");
					icon.addClass("icon-question-sign");
					
					clearTimeout(window.passTimer); // Clear the passTimer to avoid duplicates.
					
					// check password 1000ms after user stopped typing
					window.passTimer = setTimeout(function()
					{ 
						group.removeClass("warning"); 
						icon.removeClass().addClass("icon-refresh icon-spin");
							
						window.passPost = $.post("{{ url('AceUserBundle_iscurrentpassword') }}", { currentPassword:value },
						function (response)
						{
							icon.removeClass();
							if (response.valid)
							{
								group.addClass("success");
								icon.addClass("icon-ok");
							}
							else
							{
								group.addClass("error");
								icon.addClass("icon-remove");
								info.html('<i>Sorry, this is not your Current Password, give it another try</i>');
							}
						});
					}, 1000); // inactivity timer 1000ms	
				}
				else
				{
					group.addClass("error");
					icon.addClass("icon-remove");
					info.html('<i>Sorry, the Password you typed is not correct, give it another try</i>');
				}
			}
			else
			{
				group.addClass("error");
				icon.addClass("icon-remove");
				info.html('<i>Sorry, your Password is at least 6 characters long</i>');
			}
		}
		else
			icon.addClass("icon-exclamation-sign");
	}
 
	function emailValidation(el)
	{
		resetElements(el);
		
		if(window.emailPost){window.emailPost.abort();} // abort previous post request if present
		var value = $(el).val();
		if (value.length > 4) //assuming minimum valid email format a@b.c
		{
			if (emailReg.test(value))
			{
				group.addClass("warning");
				icon.addClass("icon-question-sign");
                   
				clearTimeout(window.emailTimer); // Clear the emailTimer to avoid duplicates.
                   
				// check email availability 1000ms after user stopped typing
				window.emailTimer = setTimeout(function()
				{ 
					group.removeClass("warning"); 
					icon.removeClass().addClass("icon-refresh icon-spin");
					
					window.emailPost = $.post("{{ url('AceUserBundle_isemailavailable') }}", { email:value },
					function (response)
					{
						icon.removeClass();
						if (response.valid == "available")
						{
							group.addClass("success");
							icon.addClass("icon-ok");
						}
						else if (response.valid == "inUse")
						{
							group.addClass("error");
							icon.addClass("icon-remove");
							info.html('<i>Sorry, this E-mail is already in use by another member</i>');
						}
						else //response.valid == "own"
							icon.addClass("icon-envelope");
					});
				}, 1000); // inactivity timer 1000ms
			}
			else
			{
				group.addClass("error");
				icon.addClass("icon-remove");
				info.html('<i>Sorry, this is an invalid email address</i>');
			}
		}
		else
			icon.addClass("icon-envelope");
	}
	
	function nameValidation(el)
	{
		resetElements(el);
		icon.addClass("icon-user");
		var value = $(el).val();
		if(value.length != 0){
			if(!nameReg.test(value))
			{
				group.addClass("error");
				icon.addClass("icon-remove");
				info.html('<i>Sorry, only letters,spaces and \' - _ are allowed in your name.</i>');
			}
			else
			{
				group.addClass("success");
				icon.addClass("icon-ok");
			}
		}
	}
    
    // reset and cache fields' group, icon and info div/i/span elements
	// global variables cause otherwise other functions cannot have access to them
    function resetElements(el)
    {
		group = $(el).closest('.control-group').removeClass().addClass("control-group");
		icon = $(el).siblings('span.add-on').children().removeClass();
		info = $(el).siblings('span.help-block').html('');
	}
    
    </script>

    <script type="text/javascript" charset="utf-8">
        $(document).ready(function () {
			$("#loading").hide();
			
			// bind keyup event to the corresponding live validation functions
			//"this" in this context points to the active field DOM element
			$("#options_firstname, #options_lastname").keyup(function () {
				nameValidation(this);});
				 
			$("#options_email").keyup(function () {
				emailValidation(this);});
				
			$("#options_currentPassword").keyup(function () {
				currentPassValidation(this);});
			
			$("#options_plainPassword_new, #options_plainPassword_confirm").keyup(newPassValidation);
			
			$("#modify").click(function (e) {
				e.preventDefault();
				$("#loading").show();
                $.post("{{ url('AceUserBundle_options') }}", $('#options_form').serializeArray(),
                function (response) {
					var response = $.parseJSON(response);
					var currentPassword = $("#options_currentPassword");
					$(".help-block").html('');
					$(".control-group").removeClass("error success");					
					currentPassword.val('');
					
					//change Current Password field icon, only if it was entered correctly, otherwise leave it as is 
					currentPassword.siblings('span.add-on').children('i.icon-ok').removeClass().addClass("icon-exclamation-sign");
					
					// traverse response object and display errors(if any) in fields
					$.each( response, function(field,info){
						if(field != "message"){
							var el = $("#options_" + field);
							if(field == "plainPassword_confirm")
							{
								$('.passwords').addClass("error");
								currentPassword.closest('.control-group').addClass("error");
							}
							el.closest('.control-group').addClass("error");
							el.siblings('span.help-block').html("<i class=\"icon-exclamation-sign \"></i> <i>"+info[0]+"</i>");
						}
					});
					$("#loading").hide();
					$(".update-info").html(response.message).show().delay(10000).fadeOut(); //TODO: don't push it to default fx queue
				});
            });
        });
    </script>

{% endblock %}

{% block mainspan %}
    <h2>
	    User Account Options
	    <a href="{{ path("AceStaticBundle_info_points") }}">
		    {% include "AceUtilitiesBundle:Default:codebender_points.html.twig" with {"points": user.getPoints} %}
	    </a>
	    <a href="{{ path("AceStaticBundle_info_karma") }}">
		    {% include "AceUtilitiesBundle:Default:codebender_karma.html.twig" with {"karma": user.getKarma} %}
	    </a>
    </h2>
    <h5> Change your personal information, then click 'Save Changes' to update your profile.</h5>
    <hr />
    <div class="row-fluid">
        <div class="span3">
            <ul class="thumbnails">
                <li>
                    <a href="http://www.gravatar.com" target="_blank" class="thumbnail">
                        <img id="user_avatar" src="{{ image }}" alt="avatar of user"/>
                    </a>
                </li>
            </ul>
        </div>
        <div class="span9">
            <label><strong>Avatar</strong></label>
            <p>We are using Gravatar to power your avatars. Gravatar is a great service that stores your avatar and
                allows you to reuse it on multiple websites across the web! To change your avatar, just click on it,
                and you will be taken to www.gravatar.com. Then login or register with the same email you use for
                {{ site_name }}, and upload an image. That's it, you're set!</p>
        </div>
    </div>

	{% form_theme form 'AceUserBundle:Form:labels.html.twig' %}
    <form name="form" id="options_form" action="{{ url('AceUserBundle_options') }}" method="POST">
    <div class="row-fluid">
        <div class="span4">
            <div class="control-group">
                {{ form_label(form.username) }}
                <div class="controls">
                    <div class="input-prepend">
                        <span class="add-on"><i class="icon-user"></i></span>
                        {{ form_widget(form.username) }}
                         <span class="help-block"></span><!--used only for spacing-->
                    </div>
                </div>
            </div>
            <div class="control-group">
                {{ form_label(form.firstname) }}
                <div class="controls">
                    <div class="input-prepend">
                        <span class="add-on"><i class="icon-user"></i></span>
                        {{ form_widget(form.firstname) }}
                        <span class="help-block">{{ form_errors(form.firstname) }}</span>
                    </div>
                </div>
            </div>
            <div class="control-group">
                {{ form_label(form.lastname) }}
                <div class="controls">
                    <div class="input-prepend">
                        <span class="add-on"><i class="icon-user"></i></span>
                        {{ form_widget(form.lastname) }}
                        <span class="help-block">{{ form_errors(form.lastname) }}</span>
                    </div>
                </div>
            </div>
        </div>
        <div class="span4">
            <div class="control-group">
                {{ form_label(form.email) }}
                <div class="controls">
                    <div class="input-prepend">
                        <span class="add-on"><i class="icon-envelope"></i></span>
							{{ form_widget(form.email) }}
                        <span class="help-block">{{ form_errors(form.email) }}</span>
                    </div>
                </div>
            </div>
            <div class="control-group">
                {{ form_label(form.twitter) }}
                <div class="controls">
                    <div class="input-prepend">
                        <span class="add-on">@</span>
                        {{ form_widget(form.twitter) }}
                    </div>
                </div>
            </div>
        </div>
        <div class="span4">
			<div class="control-group">
                {{ form_label(form.currentPassword) }}
                <div class="controls">
                    <div class="input-prepend">
                        <span class="add-on"><i class="icon-exclamation-sign"></i></span>
                        {{ form_widget(form.currentPassword) }}
                        <a href="{{ url('fos_user_resetting_request') }}" tabindex="-1">
                            <i><span style="padding-left:20px">Forgot your password? Get a new one!</span></i>
                        </a>
                        <span class="help-block">{{ form_errors(form.currentPassword) }}</span>
                    </div>
                </div>
            </div>
            <div class="passwords control-group">
                {{ form_label(form.plainPassword.new, 'New Password') }}
                <div class="controls">
                    <div class="input-prepend">
                        <span class="add-on"><i class="icon-exclamation-sign iconPassNew"></i></span>
                        {{ form_widget(form.plainPassword.new) }}
                        <span class="help-block"></span>
                    </div>
                </div>
            </div>
            <div class="passwords control-group">
                {{ form_label(form.plainPassword.confirm, 'Confirm New Password') }}
                <div class="controls">
                    <div class="input-prepend">
                        <span class="add-on"><i class="icon-exclamation-sign iconPassConfirm"></i></span>
                        {{ form_widget(form.plainPassword.confirm) }}
                        <span class="help-block">{{form_errors(form.plainPassword)}}</span>
                    </div>
                </div>
            </div>
			<span class="help-block">{{ form_errors(form) }}</span>
			<div style="display:none">
				{{form_rest(form)}}
			</div>
        </div>
    </div>
    <i id="loading" class="icon-refresh icon-spin icon-large"></i>
    <span class="help-inline update-info"></span>
    <hr />
    <a class="btn btn-primary" type="submit" id="modify">Update Profile </a>
    </form>
{% endblock %}
